// Generated by CoffeeScript 1.7.1
(function() {
  var bootstrap;

  angular.module("inspire.app", ["castly.bgRecord", "castly.bgUpload", "w69b.chromePersistentLogger"]).run([
    "bgRecordService", "bgUploadService", "analytics", "$log", "chromePersistentLogger", function(bgRecord, bgUpload, logger) {
      var Background;
      Background = (function() {
        Background.prototype.nativeDiv = null;

        Background.prototype.encoder = null;

        Background.prototype.videoElement = null;

        function Background() {
          $((function(_this) {
            return function() {
              return _this.init();
            };
          })(this));
        }

        Background.prototype.init = function() {
          console.log('Initializing..');
          return this.startCapture();
        };

        Background.prototype.startCapture = function() {

          /*embedString = '<embed width=0 height=0 src="pnacl/manifest.nmf" ps_tty_prefix="ps:" ps_stdout="/dev/tty" ps_stderr="/dev/tty" type="application/x-nacl" />'
          			embedDiv = $('<div />')
          
          			 * Register our event listeners, then embed it
          			embedDiv[0].addEventListener 'load', (() => @handleLoad()), true
          			embedDiv[0].addEventListener 'error', (() => @handleError()), true
          			embedDiv[0].addEventListener 'crash', (() => @handleError()), true
          			embedDiv[0].addEventListener 'message', ((msg) => @handleMessage(msg)), true
          
          			embedDiv[0].innerHTML = embedString
          			embedDiv.appendTo 'body'
          
          			@encoder = embedDiv[0].children[0]
           */
          return bgRecord.start();
        };

        Background.prototype.handleLoad = function() {
          console.log('Loaded native encoder.');
          return this.sendFrame();
        };

        Background.prototype.handleError = function() {
          return console.log('Error.');
        };

        Background.prototype.handleCrash = function() {
          return console.log('Crash.');
        };

        Background.prototype.handleMessage = function(msg) {
          return console.log("Message: " + msg.data);
        };

        Background.prototype.sendFrame = function() {};

        Background.prototype.setupScreenCapture = function() {
          var videoElement;
          videoElement = document.createElement('video');
          return videoElement.src = videoElement.play();
        };

        return Background;

      })();
      return new Background();

      /*chrome.app.runtime.onLaunched.addListener(function(launchData) {
      	  alert('opened');
      	});
      
      	chrome.runtime.onInstalled.addListener(function() {
      	  console.log('installed');
      	});
      
      	chrome.runtime.onSuspend.addListener(function() { 
      	  // Do some simple clean-up tasks.
      	});
       */
    }
  ]);

  bootstrap = function() {
    var a;
    a = document.createElement("div");
    document.body.appendChild(a);
    return angular.bootstrap(a, ["inspire.app"]);
  };

  bootstrap();

}).call(this);
